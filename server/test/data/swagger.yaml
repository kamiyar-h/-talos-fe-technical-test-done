basePath: /
definitions:
    PostDTO:
        description: ""
        properties:
            id:
                type: string
                description: ""
            title:
                type: string
                description: ""
            description:
                type: string
                description: ""
            photoUrl:
                type: object
                description: ""
            tags:
                type: array
                items:
                    type: string
                description: ""
        type: object
        required:
            - id
            - title
            - description
            - photoUrl
            - tags
    CreatePostDTO:
        description: ""
        properties:
            title:
                type: string
                description: ""
            description:
                type: string
                description: ""
            tags:
                type: array
                items:
                    type: string
                description: ""
        type: object
        required:
            - title
            - description
            - tags
    Errors.NotFoundError:
        description: "Represents a NOT FOUND error. The server has not found anything matching\nthe Request-URI. No indication is given of whether the condition is temporary\nor permanent. The 410 (GoneError) status code SHOULD be used if the server knows,\nthrough some internally configurable mechanism, that an old resource is permanently\nunavailable and has no forwarding address.\n\nThis error is commonly used when\nthe server does not wish to reveal exactly why the request has been refused,\nor when no other response is applicable."
        properties:
            statusCode:
                type: number
                format: double
                description: ""
            message:
                type: string
                description: ""
            name:
                type: string
                description: ""
            stack:
                type: string
                description: ""
        type: object
        required:
            - statusCode
            - message
            - name
info:
    description: 'server talos fe tests'
    license:
        name: MIT
    title: server
    version: 1.0.0
paths:
    /posts:
        get:
            operationId: PostListPosts
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/PostDTO'
            description: 'List all the posts in the system (we are using in memory db so if the server is rebooted the db will be cleanse)'
            summary: null
            parameters: []
        post:
            operationId: PostAddPost
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/PostDTO'
            description: 'Creates a post and returns it'
            summary: null
            consumes:
                - application/json
            parameters:
                -
                    description: 'the post to be created (without the picture url)'
                    in: body
                    name: post
                    required: true
                    schema:
                        $ref: '#/definitions/CreatePostDTO'
    '/posts/{id}':
        get:
            operationId: PostGetPost
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/PostDTO'
            description: 'Return the selected post info'
            summary: null
            parameters:
                -
                    description: 'the id of the desired post'
                    in: path
                    name: id
                    required: true
                    type: string
    '/posts/{id}/picture':
        put:
            operationId: PostAddPicture
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/PostDTO'
                '400':
                    description: 'The post already has an image'
                    schema:
                        type: object
                    examples:
                        application/json:
                            data:
                                info: 'post with id 321c04d0-a25f-11e8-ad0a-1d90dd5e7d7c already has a picture'
                                status: 400
                '404':
                    description: 'There is no post with the provided id'
                    schema:
                        $ref: '#/definitions/Errors.NotFoundError'
            description: 'Add a picture to the post, if the post already have a picture it will throw an error (400)'
            summary: null
            consumes:
                - multipart/form-data
            parameters:
                -
                    description: 'The image to be added to the post'
                    in: formData
                    name: image
                    required: true
                    type: file
                -
                    description: 'The post id'
                    in: path
                    name: id
                    required: true
                    type: string
swagger: '2.0'
securityDefinitions: {}
